{"version":3,"sources":["canvas.jsx","App.js","reportWebVitals.js","index.js"],"names":["CanvasComponentС","React","Component","props","state","n","name","k","lastName","this","updateCanvas","prevProps","prevState","snapshot","clearCanvas","ctx","refs","canvas","getContext","beginPath","clearRect","y","x","Math","sin","pow","E","scale","widthC","lineWidth","i","step","polyline","pts","push","color","strokeStyle","forEach","p","lineTo","moveTo","stroke","ref","width","height","App","useState","stateN","setStateN","stateK","setStateK","leftBorder","setLeftBorder","qvantity","setQvantity","setName","setLastName","f","b","a","c","prepError","className","value","onChange","e","text","target","length","type","num","Number","max","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079feb32.chunk.js","sourcesContent":["import React, {useRef} from 'react';\r\n\r\nclass CanvasComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            n: this.props.name,\r\n            k: this.props.lastName\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.updateCanvas();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        /*if(prevProps != this.props){\r\n            this.setState({\r\n                n: this.props.name,\r\n                k: this.props.lastName\r\n            })\r\n        }*/\r\n        this.clearCanvas();\r\n        this.updateCanvas();\r\n    }\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    clearCanvas(){\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        ctx.beginPath();\r\n        ctx.clearRect(-300, -300,300, 300);\r\n\r\n\r\n    }\r\n    updateCanvas() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n        let c = 300\r\n        let y = x => Math.pow(Math.E, this.props.name*x) + Math.sin(this.props.lastName*x); // функция\r\n        console.log(this.props.name)\r\n        let z = 30; // масштаб\r\n        ctx.translate(c/2, c/2)\r\n\r\n// сетка\r\n        ctx.beginPath();\r\n\r\n        ctx.strokeStyle = \"rgb(0,0,0)\"\r\n        for (let x = -10; x <10; x++) {\r\n\r\n            ctx.moveTo(x*z, -c/2);\r\n            ctx.lineTo(x*z, c/2);\r\n            ctx.moveTo(-c/2, x*z);\r\n            ctx.lineTo(c/2, x*z);\r\n        }\r\n\r\n\r\n        ctx.stroke();\r\n        ctx.strokeStyle = \"#00ffe0\"\r\n        ctx.moveTo(0, -c/2);\r\n        ctx.lineTo(0, c/2);\r\n        ctx.moveTo(-c/2, 0);\r\n        ctx.lineTo(c/2, 0);\r\n        ctx.stroke();\r\n// график функции\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        for (let i = -10; i <= 10; i += 0.01) {\r\n            if(((-y(i)*z) < 11*z)&((-y(i)*z) > -11*z)){\r\n                ctx[i?'lineTo':'moveTo']((i*z), (-y(i)*z));\r\n            }\r\n        }\r\n        ctx.stroke();\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <canvas ref=\"canvas\" width={300} height={300}/>\r\n        );\r\n    }\r\n}\r\n\r\nclass CanvasComponentС extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            n: this.props.name,\r\n            k: this.props.lastName\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.updateCanvas();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.clearCanvas()\r\n        this.updateCanvas()\r\n    }\r\n\r\n    clearCanvas(){\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        ctx.beginPath();\r\n        ctx.clearRect(-200, -200,400, 400);\r\n    }\r\n\r\n    updateCanvas() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n\r\n       // let y = x => Math.pow(Math.E, this.props.name*x) + Math.sin(this.props.lastName*x); // функция\r\n        let y = x => Math.sin(this.props.lastName*x) + Math.pow(Math.E, this.props.name*x)\r\n        let scale = 20;\r\n        let step = 1;\r\n        let widthC = 200\r\n\r\n        ctx.lineWidth = 0.5;\r\n\r\n        for (let i = step*scale; i < widthC; i += step*scale) { //вертикальные\r\n            polyline('#7a7979', [[i, 0], [i, widthC]]);\r\n        }\r\n\r\n        for (let i = step*scale; i < widthC; i += step*scale) { //Горизонтальные\r\n            polyline('#7a7979', [[0, i], [widthC, i]]);\r\n        }\r\n\r\n        ctx.lineWidth = 2;\r\n        let pts = [];\r\n        for(let x = -widthC/2; x<widthC/2; x+=0.01) {\r\n            if(y(x/scale)*scale < 100){\r\n                pts.push([widthC/2+x, widthC/2 - y(x/scale)*scale]);\r\n            }\r\n\r\n        }\r\n        polyline('blue', pts);\r\n\r\n//Ось X\r\n        polyline('red', [[0, widthC / 2], [widthC, widthC / 2]]);\r\n\r\n// ось Y\r\n        polyline('green', [[widthC / 2, 0], [widthC / 2, widthC]]);\r\n\r\n        function polyline(color, pts) {\r\n            ctx.strokeStyle = color;\r\n            ctx.beginPath();\r\n            pts.forEach((p, i) => i ? ctx.lineTo(...p) : ctx.moveTo(...p));\r\n            ctx.stroke();\r\n        }\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <canvas ref=\"canvas\" width={200} height={200}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CanvasComponentС;","\nimport './App.css';\nimport {useRef, useState} from \"react\";\nimport CanvasComponent from \"./canvas\";\n\nfunction App() {\n    const [stateN,setStateN] = useState(7)\n    const [stateK,setStateK] = useState(8)\n    const [leftBorder, setLeftBorder] = useState(-4)\n    const [qvantity, setQvantity] = useState(20)\n    const [name,setName] = useState('Виталий')\n    const [lastName,setLastName] = useState('Курочкин')\n\n\n    const f = x => Math.pow(Math.E, stateN*x) + Math.sin(stateK*x);\n    let b = 0\n    let a = leftBorder\n    let c = (a+b)/2\n    let prepError = false\n\n    for(let i = 0; i < qvantity; i++){\n        if(((f(a) < 0)&(f(c) > 0))||((f(a) > 0)&(f(c) < 0))){\n            b = c\n            c = (b+a)/2\n\n        }else if(((f(b) < 0)&(f(c) > 0))||((f(b) > 0)&(f(c) < 0))){\n            a = c\n            c = (b+a)/2\n\n        }else{\n            prepError = true\n        }\n    }\n\n\n\n\n\n    const nameChange = (e) => {\n        let text = e.target.value\n        setName(text)\n        setStateN(text.length)\n    }\n    const lastNameChange = (e) => {\n        let text = e.target.value\n        setLastName(text)\n        setStateK(text.length)\n    }\n    const changeLeftBorder = (e) => {\n        let num = e.target.value\n        setLeftBorder(Number(num))\n\n\n    }\n    const changeQvantiti = (e) => {\n        let num = e.target.value\n        setQvantity(Number(num))\n    }\n\n  return (\n    <div className=\"App\">\n        <div className=\"container\">\n             <div className={\"main\"}>\n                 <div className={\"row_1\"}>\n                     <div className=\"input_name\">\n                         <span>Введите своё имя: </span>\n                         <input value={name} onChange={nameChange} type=\"text\"/>\n                     </div>\n                     <div className=\"input_name\">\n                         <span>Введите свою фамилию: </span>\n                         <input value={lastName} onChange={lastNameChange} type=\"text\"/>\n                     </div>\n                     <div className=\"input_num\">\n                         <span>Левая граница отрезка проверки: </span>\n                         <input value={leftBorder}  onChange={changeLeftBorder} type=\"number\" max={-1} min={-10} step={0.1} />\n                     </div>\n                     <div className=\"input_num\">\n                         <span>Приближение (чем больше тем точнее): </span>\n                         <input value={qvantity} onChange={changeQvantiti} type=\"number\" max={100} min={2} step={1} />\n                     </div>\n                     <div className=\"function\">\n                         <span>Функция: e<sup>x*{stateN}</sup> + sin(x*{stateK})</span>\n                     </div>\n                     <div className=\"answer\">\n                         <span>Левая граница: {leftBorder}</span>\n                         <span>Правая граница: 0</span>\n                         <span>Ответ: {prepError ? \"Обе части выше/нижи нуля\" : c }</span>\n                     </div>\n                 </div>\n                 <div className={\"row_2\"}>\n                     <span>График<br/></span>\n                     <CanvasComponent name={stateN} lastName={stateK} />\n                 </div>\n             </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}